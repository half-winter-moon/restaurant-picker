{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "cse341-restaurant-picker.herokuapp.com",
  "basePath": "/",
  "schemes": ["https"],
  "tags": [
    {
      "name": "Restaurants",
      "description": "Find your local Restaurants",
      "externalDocs": {
        "description": "Find out more restaurants",
        "url": "https://www.google.com/maps/search/restaurants/@43.8217908,-111.7934976,15z"
      }
    }
  ],
  "paths": {
    "/restaurants/": {
      "get": {
        "summary": "Gets all restaurants",
        "tags": ["Restaurants"],
        "produces": ["application/json"],
        "parameters": [],
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Creates a restaurant",
        "tags": ["Restaurants"],
        "description": "When creating a restaurant, use the cuisine _id to reference which cuisine it belongs to. Could be done using a dropdown and passing the _id as a value",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "restaurantName": {
                  "example": "Korean Restaurant"
                },
                "cuisine": {
                  "example": "62b9f1ba647a293727fb4f98"
                },
                "description": {
                  "example": "A brief description about the restaurant"
                },
                "address": {
                  "example": "274 S 2nd W, Rexburg, ID 83440"
                },
                "zipCode": {
                  "example": "'54321'"
                },
                "opens": {
                  "example": "10am"
                },
                "closes": {
                  "example": "10pm"
                },
                "phoneNumber": {
                  "example": "208-356-9005"
                },
                "restaurantWebsite": {
                  "example": "example.com"
                },
                "imgUrl": {
                  "example": "../pic.jpg"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/restaurants/{id}": {
      "get": {
        "summary": "Gets a restaurant by its ID",
        "tags": ["Restaurants"],
        "produces": ["application/json"],
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates a restaurant by its ID",
        "tags": ["Restaurants"],
        "description": "When updating a restaurant, use the cuisine _id to reference which cuisine it belongs to. Could be done using a dropdown and passing the _id as a value",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "restaurantName": {
                  "example": "Korean Restaurant"
                },
                "cuisine": {
                  "example": "62b9f1ba647a293727fb4f98"
                },
                "description": {
                  "example": "A brief description about the restaurant"
                },
                "address": {
                  "example": "274 S 2nd W, Rexburg, ID 83440"
                },
                "zipCode": {
                  "example": "'29387'"
                },
                "opens": {
                  "example": "10am"
                },
                "closes": {
                  "example": "10pm"
                },
                "phoneNumber": {
                  "example": "208-356-9005"
                },
                "restaurantWebsite": {
                  "example": "example.com"
                },
                "imgUrl": {
                  "example": "../picture.jpg"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a restaurant by its ID",
        "tags": ["Restaurants"],
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/restaurants/excludeByZipCode/{zipCode}": {
      "get": {
        "summary": "Gets all restaurants except the ones that match such Zip Code",
        "tags": ["Restaurants"],
        "description": "Type the Zip Code of the restaurant where you don't want to eat",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "zipCode",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/restaurants/excludeByCuisine/{cuisine}": {
      "get": {
        "summary": "Gets all restaurants except the ones that match such Cuisine",
        "tags": ["Restaurants"],
        "description": "Type the cuisine of the restaurant where you don't want to eat",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cuisine",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "summary": "Gets all users",
        "tags": ["Users"],
        "produces": ["application/json"],
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Creates a user",
        "tags": ["Users"],
        "description": "",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "test"
                },
                "password": {
                  "example": "12345"
                },
                "email": {
                  "example": "test@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Gets a user by its ID",
        "tags": ["Users"],
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Updates a user by its ID",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "test"
                },
                "password": {
                  "example": "12345"
                },
                "email": {
                  "example": "test@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Deletes a user by its ID",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cuisines/": {
      "get": {
        "tags": ["Cuisines"],
        "summary": "Gets all cuisines",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Cuisines"],
        "summary": "Creates a cuisine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Hawaiian"
                },
                "description": {
                  "example": "Best fish in town"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cuisines/{id}": {
      "get": {
        "summary": "Gets a cuisine by its ID",
        "tags": ["Cuisines"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Cuisines"],
        "summary": "Updates a cuisine by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Hawaiian"
                },
                "description": {
                  "example": "Worst fish in town"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Cuisines"],
        "summary": "Deletes a cuisine by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "summary": "Gets all reviews",
        "tags": ["Reviews"],
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Creates a review",
        "description": "When creating a Review, use the user _id to reference which user posted it and also the restaurant _id to where it belongs. Could be done fetching such restaurant and user information and pass those in hidden inputs",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postedBy": {
                  "example": "62b9e29cc8da181ea71296d6"
                },
                "restaurantId": {
                  "example": "62b9d069a723d8b5d45f6a07"
                },
                "content": {
                  "example": "This is a review by someone about such restaurant"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": ["Reviews"],
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "summary": "Gets a review by its ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Reviews"],
        "description": "When updating a Review, use the user _id to reference which user posted it and also the restaurant _id to where it belongs. Could be done fetching such restaurant and user information and pass those in hidden inputs",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "summary": "Updates a review by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postedBy": {
                  "example": "any"
                },
                "restaurantId": {
                  "example": "any"
                },
                "content": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Deletes a review by its ID",
        "security": {
          "restaurant_auth": ["write:restaurants", "read:restaurants"]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
